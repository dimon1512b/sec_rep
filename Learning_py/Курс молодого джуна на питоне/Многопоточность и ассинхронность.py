"""
Thread - Поток выполнения. Последовательность операций сверху вниз построково. Процесом потока управляет операционная
система
У каждого процесса есть как минимум один поток главный который выполняет описанные инструкции. При этом программа
может запускать паралельные потоки и таким образом запаралеливать процессы

Все потоки выполнения поребляют оперативную память

При разделенных и паралельных потоках часто стает проблема гонки. Эта проблема возникает не всегда. Обстоятельства
должны сложиться так что например один поток как-то формирует данные а в то же время другой поток уже работает с
этими данными в то время как они ещё меняются или формируются

Минус многопоточности в том что сложно очень окуратно отслежевать потоки чтобы небыло состояния гонки
Без много поточности и ассинхронности тоже можно строить прораммы и реализовать в них логику и они будут не хуже
работать

Сущувсвует понятие асинхронности или кооперативной многозадачности. Ассинхронность работает в рамках одного процесса
и одного потока. Проблема в том что наш сервис большее количевство времени простаивает ожидая ответов на запросы.
Ассинхронность решает этот вопрос благодаря тому что использует то время в которое поток мог бы простаивать в
ожидании на например прием следующего запросса
"""
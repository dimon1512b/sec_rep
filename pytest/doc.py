"""
Тести мають бути розміщені в папці tests

Кожен тест файл має починатися з слова test

Кожен тест файл може зберігати в собі декілька тест функцій

Кожна тест функція повинна починатися зі слова test

Тест файли можна розмістити в архитектурі папок в головній папці test

Кожна діректорія з тест файлами повинна зберігати в собі файл __init__



Fixtures - функції які можуть бути виконані до тесту або після тесту
Фікстури описуються в файлі conftest.py
Фікстури це функції які обертаються в дикоратор pytest.fixture
Фікстури можуть повертати значення та тест функція може це значення
використовувати
Фікстура передається в тест функцію як параметр
Тест функція може приймати декілька фікстур як параметри функції
Фікстура виконується перед тестом та в параметр тесту передається результат
виконання фікстури


Фікстура може приймати аргументи:

аргумент scope='function'(default) говорить про те що фікстура буде раз за разом
виконуватися при викликі тестів які її потребують

аргумент scope='session' говорить про те що результат виконання фікстури
кешується

аргумент autouse=True говорить про те, що фікстура буде виконуватися завжди та
для кожного тесту автоматично і її не треба передавати як аргумент тесту



Файл conftest може бути не один. Можна створювати для кожної папки в
архітектурі тест файлів окремий conftest і цей conftest буде доступний лише
в області видимості тієї папки в якій він знаходиться


Тести запускаються з корневої директорії проету в якій лежить папка tests


Yield - в тестах це оператор передачі керування потоком

Щоб виконати код в фікстурі після виконання тесту необхідно писати цей код
після оператора yield який не забов'язаний нічого повертати.


Після тестів треба прибирати тестові сліди видаляючи данні в тестовій базі
Для цього можна користуватися конструкцією контекстного менеджера через
декоратор @contextmanager or @asynccontextmanager.
Типу в середині фікстури описується функція яка декорується контекстним
менеджером. В середині цієї функції виконується створення юзера для бази данних
потім повернення цього юзера через yield, потім після yield виконується
видалення цього юзера з бази данних. Сама фікстура повертає ці задекоровану
функцію контекстним менеджером

"""